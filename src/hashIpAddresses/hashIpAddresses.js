const Z='split',Y='.',X='map',W=Math,V=null,U=Number,T='abs',S='random',R='get',Q='set',P='floor',O='join',N='has',M='clear',L='repeat',K=['red','yellow','white'][X](_=>`color:${_}`),A={A:V},B=new Map(),C=(a,b,s=a[Z](Y),c=b[Z](Y))=>(a=s[X]((_,i)=>c[X](d=>U(s[i])*U(d))),b=[0,1,2,3][X](i=>W[T]((a[i][i]+a[i][(i+1)%4])-(a[(i+1)%4][i]+a[(i+2)%4][i]))),W[T]((b[0]+b[2])-(b[1]+b[3]))),D=a=>B[N](a)?B[R](a):A.A===V?C([0,0,0,0][X](()=>W[P](W[S]()*256))[O](Y),a):B[Q](a,C(A.A,a))[R](a),explainer=(a=K[0],b=K[1],c=K[2],d='!'[L](65),e='     -->     ',f=' '[L](19))=>console.log(`  %c${d}\r\n      %cDO NOT USE FOR ANY CRYPTOGRAPHIC PURPOSES - VERY INSECURE\r\n  %c${d}%c\r\n\r\nHow it works:\r\n\tExtract A, B, C, D, a, b, c, and d from the IP strings:\r\n\t\tServer IP => A.B.C.D      Client IP => a.b.c.d\r\n\r\n\tMultiply to form matrix        Split into 4 "Inverted L" Sections\r\n\t\t[ Aa  Ab  Ac  Ad ]${e}[ 1  1  3  4 ]\r\n\t\t| Ba  Bb  Bc  Bd |${e}| 1  2  2  4 |\r\n\t\t| Ca  Cb  Cc  Cd |${e}| 1  2  3  3 |\r\n\t\t[ Da  Db  Dc  Dd ]${e}[ 4  2  3  4 ]\r\n\r\n\tFor Each Section        Compute\r\n\t\tW  X${f}(W + X) - (Y + Z) and\r\n\t\tY  -${f}Push the absolute value of\r\n\t\tZ  -${f}the result into an array\r\n\r\n\tFrom that Array: [ O1, O2, O3, O4 ]\r\n\t\tCompute (O1 + O2) - (O3 + O4)\r\n\t\t\tReturn the absolute value of the result\r\n\r\n  %c${d}\r\n      %cDO NOT USE FOR ANY CRYPTOGRAPHIC PURPOSES - VERY INSECURE\r\n  %c${d}\r\n`,a,b,a,c,a,b,a);
export const setServerIp=ip=>B[M](A.A=ip);
export const calculateKeyPairValue=clientIp=>D(clientIp);
